[tool.poetry]
name = "python-clean-architecture-boilerplate"
version = "0.1.0"
description = "Python clean architecture boilerplate"
authors = ["Gal Ezra <galezra@gmail.com>"]
packages = [
    { include = "*", from = "src" }
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/galezra/python-clean-architecture-boilerplate#readme"
repository = "https://github.com/galezra/python-clean-architecture-boilerplate"

[tool.poetry.scripts]
main = "main:main"

[tool.poetry.dependencies]
python = "^3.12"
exceptiongroup = "^1.2.2"
tomli = "^2.0.1"
coverage = "^7.6.1"
pydantic = {extras = ["email"], version = "^2.8.2"}
fastapi = "^0.112.2"
uvicorn = "^0.30.6"
pytest-asyncio = "^0.24.0"
mock = "^5.1.0"

[tool.poetry.dev-dependencies]
pytest = "8.3.2"
pytest-cov = "5.0.0"
mypy = "1.11.1"
bandit = "1.7.9"
docformatter = "1.7.5"
ruff = "0.6.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
backend-path = ["src"]

[tool.pytest.ini_options]
addopts = "-vvv"
testpaths = "tests"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 120
lint.select = ["ALL"]
lint.ignore = [
    "ANN101",
    "ANN102",
    "D100",
    "D101",
    "D102",
    "D103",
    "D105",
    "D106",
    "D107",
    "D200",
    "D203",
    "D212",
    "D213",
    "TD003",
    "UP006",
    "UP007",
]
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
